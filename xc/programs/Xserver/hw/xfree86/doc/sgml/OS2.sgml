<!doctype linuxdoc system>

<article>
<title>README for XFree86 3.1.2D on OS/2
<author>Holger Veit
<Date>Last modified on: 20 Feb 1996

<toc>

<sect>Introductory Note about the ALPHA release 3.1.2D
<p>
Before looking into this file, please check for any LATEST.OS2 files
that may come with the binary distribution. Some statements made here
refer to the official public version of XFree86/OS2, and may not be
fully functional in the alpha release.

This version of the code is called XFree86/OS2 3.1.2D. The letter ``D'',
according to the naming rules of XFree86, usually denotes a (public)
beta version of the code. Since this is the first public version of
XFree86/OS2 at all, this code is considered having ALPHA quality only.

The purpose of this release is to test it widely without restrictions
in a large number of configurations and find bugs that are still existing
in the distribution. It is also intended as a developer's platform to
port and write applications based on the X11 programming interfaces
provided here. This release is complete (with one exception) regarding
the X11R6.1 ``core'' distribution. The ``contrib'' distribution containing
some of the more interesting tools for the end user, will be issued together
with a later release (no need to start porting it independently).

This version is therefore intended for the experienced and knowledged
software engineer only, not for a casual end user.

This means - and this should be taken serious - that
<itemize>
<item> there is no explicit or implicit warranty that certain code works
       correctly or works at all
<item> this code may damage your hardware; this includes improper
       configuration or bugs still present in the software
<item> this code may destroy or damage your data on the storage media, crash 
       or lock up the operating system and even damage data on different 
       disk partitions
</itemize>

You are urged to make a backup of your complete system and keep it in a safe
place before you attempt to load any of this software on your disk.

This even holds if you already have a working copy of XFree86-3.1.2D
running on another platform, such as Linux, and found it working without
problems. This is XFree86/OS2 which differs in a number of critical aspects
from any Unix implementation of XFree86.

If you are afraid to try out this code, simply don't use it and wait for
a future, hopefully more bug-free version.


<sect>What and Where is XFree86?

<p>
XFree86 is a port of X11R6 that supports several versions of
Intel-based Unix.  It is derived from X386 1.2, which was the X server
distributed with X11R5.  This release consists of many new features
and performance improvements as well as many bug fixes.  The release
is available as source patches against the X Consortium X11R6 code, as
well as binary distributions for many architectures.
<p>XFree86/OS2 is the tentative work title for the implementation of XFree86
on OS/2 based systems.

See the <url url="COPYRIGHT.html" name="Copyright Notice">.

<!--
The sources for XFree86/OS2 are available by anonymous ftp from:

<url name="ftp.XFree86.org:/pub/XFree86/current"
url="ftp://ftp.XFree86.org/pub/XFree86/current">
-->

Binaries for OS/2 2.11 and OS/2 Warp are available from:
<url name="ftp.XFree86.org:/pub/XFree86/beta/binaries/OS2"
url="ftp://ftp.XFree86.org/pub/XFree86/beta/binaries/OS2">
<p>
more archives to be added ...


Other versions:

XFree86/OS2 will run on all dialects of Warp, including Warp "red spine box",
Warp "blue spine box", Warp Connect and Warp Server (beta 1 and 2). Fixpack
level 5 is mandatory, a later fixpack level (10 or 17) is recommended.
XFree86/OS2 appears to work under OS/2 2.11 with fixpack 100, but this was
not checked in all details, so hidden problems may still exist. It is 
unlikely that it will run stable under OS/2 2.0 and 2.1, and it will definitely
not run with any OS/2 1.X.

It is possible to build XFree86/OS2 from the sources.  Read about this
in some section below.

<sect>Bug Reports for This Document

<p>
Send email to <em/Holger.Veit@gmd.de/ (Holger Veit) or
<em/XFree86@XFree86.org/ if you have comments or suggestions about
this file and we'll revise it.

<sect>Hardware and Software Requirements

<p>
<sect1>Supported, Required, and Recommended Hardware

<p>
<itemize>
<item> At least a 486DX33 with 16MB RAM is required. A Pentium or Pentium Pro
       and more main memory is recommended. A 386 or a system with 8MB or less
       memory is an insufficient configuration.
<item> There are no specific requirements concerning network cards, disk types,
       or CD ROM equipment; of course the more powerful, the better.
<item> Depending on the packages installed, a disk space of 20-55MB on a
       HPFS formatted partition (or a NFS partition natively allowing long 
       filenames) is required. XFree86/OS2 will not run on FAT partitions.
<item> You need a video card that is supported by XFree86. Refer to the general
       README document for a list of supported cards. Note that the sets
       of video cards supported by XFree86 on one hand and OS/2 on the other 
       hand overlap, but do not match exactly, i.e. the fact that your card
       is supported by OS/2 does not mean it works with XFree86 as well, and
       vice versa. XFree86 does not use the video services of the OS/2
       operating system.
</itemize>

<sect1>Required Software

<p>
<itemize>
<item> OS/2 2.11 with fixpack 100 and all versions of Warp with at least
       fixpack level 5 are required.
<item> In the version 3.1.2D, you need certain networking TCP/IP software. 
       In a future version, this restriction might be no longer present.
       <enum>
       <item> For OS/2 2.11, IBM TCP/IP 2.0 or later is mandatory.
       <item> Warp comes with the Internet Access Kit (IAK), which is
              sufficient. Warp Connect and Warp Server come with a full
              version of TCP/IP (3.0). Use of this software is preferred over
              IAK then.
       </enum>
       Other versions of TCP/IP, such as FTP's, DEC's, or Hummingbird's 
       TCP/IP versions, as well as IBM TCP/IP 1.X are not supported. Nor does
       any networking support from DOS (packet drivers, winsock), Netware,
       or NetBIOS work, and I won't to provide support for that in the future.
<item> If you want to write or port applications for XFree86, you are
       encouraged to do so. You will need a complete installation of
       EMX/gcc 0.9B fix 1 or later for doing so. Neither the second (obsolete)
       implementation of gcc, nor any commercial package, including
       Cset/2, VAC++, Borland C++/OS2, Watcom C++, Metaware C, and others,
       is suitable for porting, because various parts of the X DLLs rely
       on certain features only present with EMX.
</itemize>

<sect>Installing the System

<p>
The binary distribution is composed of a number of zip archives
which are the executables, servers, fonts, libraries, include files,
man pages, and config files.  The full distribution requires about 
40-55MB of disk space.  

All archives of this alpha version are packed with the <tt/info-zip/ utility, 
which is available under the name <tt/UNZ512X2.EXE/ from many OS/2 archives.
Please obtain a native OS/2 version of this unpacker. DOS <tt/PKUNZIP/ does
not work, because it cannot unpack long file names and extended attributes.

At this moment, the distribution covers only the ``core'' distribution
which somewhat reduces the usability. Some of the more interesting clients 
from the ``contrib'' area will be made available in the future.

    The contents of the packages are:

<descrip>
<tag/REQUIRED:/
    <descrip>
    <tag/312Dbase/	A special device driver and the SuperProbe program
    <tag/312Ddoc/	READMEs and XFree86 specific man pages.
    <tag/312Dbin/	all of the executable X client applications and shared libs
    <tag/312Dfnts/	the misc and 75dpi fonts
    <tag/312Dlib/	data files needed at runtime
    <tag/emxrt/         Runtime libraries of EMX
    </descrip>

    Choose at least one of the following to match your hardware:

    <descrip>
    <tag/312D8514/	the X server for IBM 8514/A and compatible boards
    <tag/312DAGX/	the X server for AGX boards
    <tag/312DI128/	the X server for &num;9 Imagination 128 boards
    <tag/312DMa32/	the X server for ATI Mach32 graphics boards
    <tag/312DMa64/	the X server for ATI Mach64 graphics boards
    <tag/312DMa8/	the X server for ATI Mach8 graphics boards
    <tag/312DMono/	the Monochrome X Server
    <tag/312DP9K/	the X server for P9000 based boards
    <tag/312DS3/ 	the X server for S3 based boards
    <tag/312DSvga/	the 8-bit pseudo-color X server for Super VGA cards
    <tag/312Dvg16/	the 4-bit pseudo-color X server for VGA &amp; SVGA cards.
    <tag/312Dw32/	the X server for et4000w32 based boards
    </descrip>

<tag/OPTIONAL:/

    <descrip>
    <tag/312Dman/ 	pre-formatted man pages for the X11 interface and clients
    <tag/312Df100/	100dpi fonts
    <tag/312Dfscl/	Speedo and Type1 fonts
    <tag/312Dfnon/ 	Japanese, Chinese and other fonts
    <tag/312Dfcyr/	Cyrillic fonts
    <tag/312Dfsrv/	the font server with man pages.
    <tag/312Dprog/	the X11 header files and programmer's utilities
			for compiling other X applications
    <tag/312Dpex/	PEX fonts and libraries required for PEX applications
    <tag/312Dnest/	the Xnest X server
    </descrip>
</descrip>

In order to save space on your disk and reduce net bandwidth, choose the
software to obtain carefully. Each X server is an archive of about 1.4MB
and occupies 2.5MB on the disk. You won't normally need more than the
single Xserver tailored to your video card.

If it is your first time install, get the <tt/312Dbase/ archive before any
of the other packages. This package contains a driver and a test program,
which analyzes your video hardware. If this program fails or reports an
incompatible hardware, it makes no sense to obtain the other packages in
the hope that they would magically work.

<sect> Checking Compatibility of Video Hardware

<p>
In the following, we assume that you want to install XFree86/OS2 on a disk
drive with the letter Y: (which you probably don't have). Change the letter
in all commands accordingly.

<enum>
<item> Obtain the package <tt/312Dbase/ and install it from the root directory
       of the Y: drive, by entering the following commands:
<tscreen><verb>
[C:\] Y:
[Y:\] cd \
[Y:\] unzip \path_of_package\312Dbase.zip
</verb></tscreen>

<item> Edit your CONFIG.SYS file to contain the following line somewhere:
<tscreen><verb>
DEVICE=Y:\XFree86\lib\xf86sup.sys
</verb></tscreen>
       Of course replace ``Y:'' with the correct drive letter.

<item> At this point, you may consider to add the variables required for
       XFree86/OS2 as well, which will save you from one additional reboot.
       Refer to section <ref id="envvar" name="Adding Variables to CONFIG.SYS">
       below.

<item> After adding the device driver entry to the CONFIG.SYS file, you must
       reboot to install the driver. XFree86/OS2 will not work without this
       driver.

<item> Start a full screen OS/2 CMD session and enter the following
       command:
<tscreen><verb>
[C:\] Y:\XFree86\bin\SuperProbe
</verb></tscreen>

<item> This command will (normally) report important information about your
       video configuration, i.e. the type of chipset, the available video
       memory and the RAMDAC circuit available. Please write this down or
       redirect the output of ``SuperProbe'' into a file by entering:
<tscreen><verb>
[C:\] Y:\XFree86\bin\SuperProbe >filename
</verb></tscreen>

<item> SuperProbe can identify many more video cards than are supported by
       XFree86. Therefore lookup the reported type in the compatibility list,
       and also check the accompanying README.* files for special conditions
       and requirements. If the card is not mentioned or marked as unsupported,
       the game is over for you now, unfortunately.

<item> Otherwise chances are good, that you can run XFree86/OS2. Obtain the
       rest of the software and proceed with the next section.
</enum>

<sect> Installing the packages

<p>
XFree86/OS2 assumes a directory hierarchy starting from <tt>drive:&bsol;XFree86</tt>.
This can be changed, but is strictly discouraged.

<enum>
<item> Choose a HPFS partition with sufficient free space.
<item> For each package to install, go to the root directory of this
       drive, and type:
<tscreen><verb>
drive:> cd \
drive:> unzip \path_of_packages\312Dxxxx.zip
</verb></tscreen>
</enum>

<sect> Adding Variables to CONFIG.SYS <label id="envvar">

<p>
XFree86/OS2 requires a number of settings in the CONFIG.SYS file to work
correctly. Please add the following settings:

<descrip>
<tag/TERM/
	Set the preferred terminal type for the xterm or editor to be used.
	Some programs need this setting. I have my type set to
<tscreen><verb>SET TERM=ansi</verb></tscreen>
	<tt>&bsol;XFree86&bsol;lib&bsol;X11&bsol;etc&bsol;termcap.x11</tt>
	contains a suitable termcap which
	can be used in place of termcap files that come with EMX, EMACS, or
	other ported software.
<tag/TERMCAP/
	This variable must be set to the location where the termcap file
	used for the above <tt/TERM/ variable is searched. My setting, for
	instance, is:
<tscreen><verb>SET TERMCAP=D:/EMX/ETC/TERMCAP.X11</verb></tscreen>
	Note that forward ``/'' is used as a directory separator.
<tag/ETC/
	Set to an ETC directory. Normally, this is already set to the ETC
        directory of the TCP/IP code, such as
<tscreen><verb>SET ETC=C:\TCPIP\ETC</verb></tscreen>
<tag/TMP/
	Set to an TMP directory. Normally, this is already set to the TMP
        directory of the TCP/IP code, such as
<tscreen><verb>SET TMP=C:\TCPIP\TMP</verb></tscreen>
<tag/HOSTNAME/
	Set to the internet hostname. Normally, this is already set by the
	TCP/IP installation program, such as
<tscreen><verb>SET HOSTNAME=myhost</verb></tscreen>
	With IAK, you would normally run a loopback configuration 
	<ref id="loopback" name="Network configuration"> and would then
	set this to
<tscreen><verb>SET HOSTNAME=localhost</verb></tscreen>
<tag/USER/

<tag/LOGNAME/
	Set both to a username. Currently, they are there just to make some
	programs happy; in the future, this variable might be set by a
	login shell of a multiuser configuration. My variable, for instance,
	is set to
<tscreen><verb>
        SET USER=holger
        SET LOGNAME=holger
</verb></tscreen>
<tag/HOME/
	Set this to an existing directory that is supposed to be a home directory
	of a user. Some utilities place temporary and init files here. This
	is also future investment for a multiuser configuration, but must still
	be there. For instance, this variable might be set to
<tscreen><verb>SET HOME=H:\user\holger</verb></tscreen>
<tag/X11ROOT/
	This is one of the most important settings, it determines the root
	of the XFree86 directory tree. Normally, you will set this to the
	drive letter of the partition where the &bsol;XFree86 tree resides,
	such as in
<tscreen><verb>SET X11ROOT=Y:</verb></tscreen>
	You may try to move the tree to another subdirectory, e.g. to
	<tt>K:&bsol;OS2&bsol;X11&bsol;XFree86...</tt> and would then have
	to change this to
<tscreen><verb>SET X11ROOT=K:/OS2/X11</verb></tscreen>,
	but this is discouraged, since some utilities might not accept this.
	Note the forward ``/'' as a directory separator here.
<tag/DISPLAY/
	This variable may be set to the display to be used for displaying
	clients. Normally you will set this variable to the same value as
	the <tt/HOSTNAME/ variable and simply add a <tt/:0.0/ after it, such as
<tscreen><verb>SET DISPLAY=myhost:0.0</verb></tscreen>
	Read the X11 man page on the exact meaning of these postfixes and
	other options.
<tag/XSERVER/
	Set this to the executable name of the X server to be used. This
	must be a complete path. My setting is as follows:
<tscreen><verb>SET XSERVER=D:/XFree86/bin/XF86_Mach64.exe</verb></tscreen>
<tag/PATH/
	Add the binary directory for the X11 utilities to your search PATH.
	This is normally the directory (adjust the letter)
<tscreen><verb>Y:\XFree86\bin</verb></tscreen>
	It is possible to move the binaries to another directory in the
	search path; for maintenance reasons and clarity of the structure, this
	is not recommended, though.
<tag/LIBPATH/
	Add the DLL directory for the X11 utilities to the LIBPATH.
	This is normally the directory (adjust the letter)
<tscreen><verb>Y:\XFree86\lib</verb></tscreen>
	It is possible to move the DLLs to another directory in the
	library path; for maintenance reasons and clarity of the structure, 
	this is not recommended, though. Note that
	<tt>Y:&bsol;XFree86&bsol;lib</tt>
	has several other subdirectories; these may not be moved elsewhere,
	rather they must stay there, because most utilities form a path to
	these directories by using <tt>%X11ROOT%&bsol;XFree86&bsol;lib</tt>
	as a base.
</descrip>

<sect> Remarks on the Network Configuration

<p>
It is beyond the scope of this document to even give an introduction about
the correct installation of the TCP/IP networking system. You must do this
yourself or seek assistance elsewhere. It is only possible to say here that
a PC working well in a TCP/IP based LAN network will also work with 
XFree86/OS2 (when all other prerequisites are matched as well). 

<label id="loopback">With IAK, there is a special configuration necessary,
unless you want to use XFree86/OS2 only during a hot link to your Internet
provider, the so called ``localhost'' or ``loopback'' configuration. This is
a local network interface which ``loops'' back to the same host. The following
settings are necessary for this:

<enum>
<item> Create a file <tt>&bsol;tcpip&bsol;etc&bsol;hosts</tt> with the
	following content:
<tscreen><verb>127.0.0.1  localhost</verb></tscreen>
<item> Add the following line to your
	<tt>&bsol;tcpip&bsol;bin&bsol;tcpstart.cmd</tt>:
<tscreen><verb>ifconfig lo 127.0.0.1 up</verb></tscreen>
<item> Uncomment the <tt/inetd/ process in the same file.
<item> Set the HOSTNAME environment variable to <tt/localhost/ as described
       in the last section.
<item> Add the following line to CONFIG.SYS:
<tscreen><verb>SET USE_HOSTS_FIRST=1</verb></tscreen>
<item> After rebooting, verify that the following command works:
<tscreen><verb>[C:\] ping localhost</verb></tscreen>
</enum>

If you have problems to get this or other basic networking things running,
seek assistance elsewhere.

<sect> Configuring X for Your Hardware

<p>
After you have added the required settings and setup a working network,
run the <tt/xf86config/ program to create a standard configuration file
in <tt>Y:&bsol;XFree86&bsol;lib&bsol;X11&bsol;XConfig</tt> from a windowed
or full screen OS/2 text session:
<tscreen><verb>[C:\] xf86config</verb></tscreen>

This program will ask a number of questions. You will need the information
obtained from the SuperProbe program here. The program should be 
self explanatory; if you have problems to understand something though, seek
assistance in the newsgroups.

Alternatively, but not recommended for the non-expert, you can edit the 
<tt/XConfig/ file manually with a text editor. A sample file is in
<tt>Y:&bsol;XFree86&bsol;lib&bsol;X11&bsol;XConfig.eg</tt>, which can be
used as a starting point.

For details about the <tt/XF86Config/ file format, refer to the
<em>XF86Config(4/5)</em> manual page.

If you know the configuration process from Linux or other XFree86 platform, 
you will encounter a few differences:
<itemize>
<item> There is no configuration for the mouse type or device. The mouse
       device name is fixed to OSMOUSE, and this cannot be changed.
       If you have a three-button-mouse, install the correct OS/2 driver 
       for it, such as
<tscreen><verb>
DEVICE=D:\OS2\BOOT\PCLOGIC.SYS SERIAL=COM1
DEVICE=D:\OS2\BOOT\MOUSE.SYS TYPE=PCLOGIC$
</verb></tscreen>
       for a MouseSystems compatible mouse, for instance.
<item> Currently, the X server does not read the native OS/2 keyboard map,
       so you need a xmodmap file for a non-us keyboard. Fortunately, it
       is the same you use for Linux. The server is compiled with the 
       XKEYBOARD option, so this might be an alternative. At the time of this
       documentation, unfortunately, some subtle bug in the OS/2 implementation
       is still waiting for a fix, so this might not yet work. Read the 
       LATEST.OS2 file with the binary distribution.
<item> There is no support for the Wacom and Elographics input devices yet.
</itemize>

Other than that, an existing <tt/XF86Config/ file for the same XFree86 version
from Linux or another platform may be used without changes.

Once you've set up a XF86Config file, you can fine tune the video
modes with the <tt>xvidtune</tt> utility. 

<sect> Running X

<p>
16mb of memory is a recommended minimum for running the network software,
X and the presentation manager in parallel.  The server, window manager and 
an xterm take about 4-6 Mb of memory themselves.  X will start up on a
system with 8MB or less, but the performance will severely suffer from
heavy disk swapping. Your mileage may vary, though, so some people might
consider this still tolerable.

The easiest way for new users to start X windows is to type: 
<tscreen><verb>[C:\] startx</verb></tscreen>.

To get out of X windows, type: ``<tt/exit/'' in the console xterm.
You can customize your X by creating <tt/.xinitrc/, <tt/.xserverrc/,
and <tt/.twmrc/ files in the directory that the <tt/HOME/ environment variable
points to. These files are described in the xinit and startx man pages.

<sect> Rebuilding the XFree86 Distribution

<p>
Do you really want to rebuild XFree86/OS2 from source? If so, here are
a few hints:
<enum>
<item> You need about 250-300 MB of free HPFS space.
<item> You must have the complete EMX environment installed.
<item> You need most of the GNU utilities that are available from the
       unix directory of hobbes.nmsu.edu.
<item> You need a GNU make 3.71 or 3.72, others often have obscure bugs.
       You cannot use dmake, nmake, wmake, or other toy software as a
       replacement.
<item> Install the X11R6.1 ``core'' distribution on some disk under a
       directory like <tt>&bsol;X11</tt>, i.e.
       <tt>&bsol;X11&bsol;xc&bsol;...</tt>.
<item> Copy the cmd file <tt>buildos2.cmd</tt> from the directory
       <tt>&bsol;X11&bsol;xc&bsol;config&bsol;util</tt> to the top
       directory <tt>&bsol;X11&bsol;xc</tt>.
<item> Execute this script; this should recompile everything, thereby
       producing a logfile <tt>&bsol;X11&bsol;xc&bsol;buildxc.log</tt>.
       The process requires between 2 and 20 hours depending on your hardware.
</enum>
Good luck!

<sect>Building New X Clients

<p>
The easiest way to build a new client (X application) is to use
<tt/xmkmf/ if an <tt/Imakefile/ is included in the sources.  Type
``<tt/xmkmf -a/'' to create the Makefiles, check the configuration if
necessary and type ``<tt/xmake/''. ``<tt/xmake/'' is a wrapper for the
GNU make program which defeats the improper SHELL setting typically found
in a Makefile generated from an Imakefile.

<sect> Acknowledgements

<p>
Many thanks to:
<itemize>
<item> <bf/Sebastien Marineau/ for his great work on getting the server code
debugged
<item> <bf/Eberhard Mattes/ for the wonderful base platform EMX which this
port heavily relies on
<item> <bf/ME/ - no, no, forget this: I won't praise myself :-)
</itemize>

<verb>
$XFree86: xc/programs/Xserver/hw/xfree86/doc/sgml/OS2.sgml,v 3.4 1996/03/10 12:05:04 dawes Exp $





$XConsortium$
</verb>

</article>
